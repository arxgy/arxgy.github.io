<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="arxgy.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="arxgy.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-01-01T01:24:41+00:00</updated><id>arxgy.github.io/feed.xml</id><title type="html">blank</title><subtitle>Hello there, I&apos;m Ganxiang Yang, an senior undergrad at SJTU. Welcome to my homepage!
</subtitle><entry><title type="html">Dream Walk</title><link href="arxgy.github.io/blog/2023/Evanston/" rel="alternate" type="text/html" title="Dream Walk" /><published>2023-10-05T00:00:00+00:00</published><updated>2023-10-05T00:00:00+00:00</updated><id>arxgy.github.io/blog/2023/Evanston</id><content type="html" xml:base="arxgy.github.io/blog/2023/Evanston/"><![CDATA[<p>Evanston的秋日黄昏于我，便是初次读到阿赫玛托娃与勃洛克时的震颤。</p>

<style>
/* p { */
  line-height: 1.2;
/* } */
</style>

<p><span style="color: grey;">
我想和你一起生活<br />
在某个小镇<br />
共享无尽的黄昏<br />
和绵绵不绝的钟声<br />
在这个小镇的旅店里——<br />
古老时钟敲出的<br />
微弱响声<br />
像时间轻轻滴落<br />
</span></p>

<p><span style="color: grey;">
有时候，在黄昏，自顶楼某个房间传来<br />
笛声<br />
吹笛者倚著窗牖<br />
而窗口大朵郁金香<br />
此刻你若不爱我，我也不会在意<br />
在房间中央，一个瓷砖砌成的炉子<br />
每一块瓷砖上画著一幅画：<br />
一颗心，一艘帆船，一朵玫瑰<br />
而自我们唯一的窗户张望<br />
雪，雪，雪<br />
你会躺成我喜欢的姿势：慵懒<br />
淡然，冷漠<br />
一两回点燃火柴的<br />
刺耳声<br />
你香烟的火苗由旺转弱<br />
烟的末梢颤抖著，颤抖著<br />
短小灰白的烟蒂——连灰烬<br />
你都懒得弹落——<br />
香烟遂飞舞进火中<br />
</span></p>

<p><br />
长街余温尚存。</p>
<style>
    /* Adjust the image size to zoom in to 60% */
    .img-shrink {
        width: 60%;
        height: auto;
    }
</style>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Evanston_ave-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Evanston_ave-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Evanston_ave-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/assets/img/Evanston_ave.jpg" class="img-fluid img-shrink rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>

</div>
<!-- <div class="caption">
    A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all.
</div>
 -->]]></content><author><name></name></author><category term="Pastime" /><summary type="html"><![CDATA[此刻你若不爱我，我也不会在意]]></summary></entry><entry><title type="html">Orb of Negation</title><link href="arxgy.github.io/blog/2023/Orb-of-Negation/" rel="alternate" type="text/html" title="Orb of Negation" /><published>2023-10-05T00:00:00+00:00</published><updated>2023-10-05T00:00:00+00:00</updated><id>arxgy.github.io/blog/2023/Orb-of-Negation</id><content type="html" xml:base="arxgy.github.io/blog/2023/Orb-of-Negation/"><![CDATA[<style>
/* p { */
  line-height: 1.2;
/* } */
</style>

<!-- <div class="caption">
    A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all.
</div>
 -->]]></content><author><name></name></author><category term="Pastime" /><category term="Peers" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">城池</title><link href="arxgy.github.io/blog/2023/Misc/" rel="alternate" type="text/html" title="城池" /><published>2023-08-20T00:00:00+00:00</published><updated>2023-08-20T00:00:00+00:00</updated><id>arxgy.github.io/blog/2023/Misc</id><content type="html" xml:base="arxgy.github.io/blog/2023/Misc/"><![CDATA[<style>
/* p { */
  line-height: 1.2;
/* } */
</style>

<p>蒙上双眼<br />
心与手要呼唤她的名字<br />
在长长的叶子上写诗<br />
鹅黄的高塔慢慢行礼 打个哈欠<br />
一起等候太阳疲惫的日子<br />
词语破碎之处，阳光风干殆尽<br />
曾经并排行过的细浪<br />
光明的汁液初次碰撞作响<br />
有些时候 我们习惯了被它们推走<br />
许多时候 你仅仅挥动虔诚的右手<br />
星星如睫蜷伏<br />
目送你溶入蓝蓝的皱褶<br />
看船夫摇上半朵满月<br />
忽然放歌<br /></p>

<!-- 
This post shows how to add custom styles for blockquotes. Based on [jekyll-gitbook](https://github.com/sighingnow/jekyll-gitbook) implementation.

We decided to support the same custom blockquotes as in [jekyll-gitbook](https://sighingnow.github.io/jekyll-gitbook/jekyll/2022-06-30-tips_warnings_dangers.html), which are also found in a lot of other sites' styles. The styles definitions can be found on the [_base.scss](https://github.com/alshedivat/al-folio/blob/master/_sass/_base.scss) file, more specifically:

```scss
/* Tips, warnings, and dangers */
.post .post-content blockquote {
    &.block-tip {
    border-color: var(--global-tip-block);
    background-color: var(--global-tip-block-bg);

    p {
      color: var(--global-tip-block-text);
    }

    h1, h2, h3, h4, h5, h6 {
      color: var(--global-tip-block-title);
    }
  }

  &.block-warning {
    border-color: var(--global-warning-block);
    background-color: var(--global-warning-block-bg);

    p {
      color: var(--global-warning-block-text);
    }

    h1, h2, h3, h4, h5, h6 {
      color: var(--global-warning-block-title);
    }
  }

  &.block-danger {
    border-color: var(--global-danger-block);
    background-color: var(--global-danger-block-bg);

    p {
      color: var(--global-danger-block-text);
    }

    h1, h2, h3, h4, h5, h6 {
      color: var(--global-danger-block-title);
    }
  }
}
```

A regular blockquote can be used as following:

```markdown
> This is a regular blockquote
> and it can be used as usual
```

> This is a regular blockquote
> and it can be used as usual

These custom styles can be used by adding the specific class to the blockquote, as follows:

```markdown
> ##### TIP
>
> A tip can be used when you want to give advice
> related to a certain content.
{: .block-tip }
```

> ##### TIP
>
> A tip can be used when you want to give advice
> related to a certain content.
{: .block-tip }

```markdown
> ##### WARNING
>
> This is a warning, and thus should
> be used when you want to warn the user
{: .block-warning }
```

> ##### WARNING
>
> This is a warning, and thus should
> be used when you want to warn the user
{: .block-warning }

```markdown
> ##### DANGER
>
> This is a danger zone, and thus should
> be used carefully
{: .block-danger }
```

> ##### DANGER
>
> This is a danger zone, and thus should
> be used carefully
{: .block-danger } -->]]></content><author><name></name></author><category term="Poems" /><summary type="html"><![CDATA[有一行魏尔兰的诗，我再也不能记起]]></summary></entry><entry><title type="html">漫长的湿润</title><link href="arxgy.github.io/blog/2023/Amoy/" rel="alternate" type="text/html" title="漫长的湿润" /><published>2023-07-13T00:00:00+00:00</published><updated>2023-07-13T00:00:00+00:00</updated><id>arxgy.github.io/blog/2023/Amoy</id><content type="html" xml:base="arxgy.github.io/blog/2023/Amoy/"><![CDATA[<p>在厦门最后的那个夜晚，我与W说，当时读王小波，“他们开始吃喝，谈笑，度过这漫漫长夜。当户外梨花飞舞，雪光如昼时，人不想沉沉睡去。这种感觉，古今无不同。” 虽然意境描述出来就难免有些落俗，也稍有一些参差不同，但我还是想借此句在我心里留念一下。之后我每次度过漫漫长夜，或许我就又会想起你和你们。我觉得这样最好。</p>

<p>我这样告诉她，她说，我觉得这样最好。</p>

<hr />

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Amoy2-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Amoy2-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Amoy2-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/assets/img/Amoy2.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    
    <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/Amoy6-480.webp" />
    <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/Amoy6-800.webp" />
    <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/Amoy6-1400.webp" />
    

    <!-- Fallback to the original file -->
    <img src="/assets/img/Amoy6.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

  </picture>

</figure>

    </div>

</div>
<!-- <div class="caption">
    A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all.
</div>
 -->]]></content><author><name></name></author><category term="Peers" /><summary type="html"><![CDATA[光明的汁液碰撞作响]]></summary></entry><entry><title type="html">见字如面</title><link href="arxgy.github.io/blog/2023/Letter/" rel="alternate" type="text/html" title="见字如面" /><published>2023-01-04T00:00:00+00:00</published><updated>2023-01-04T00:00:00+00:00</updated><id>arxgy.github.io/blog/2023/Letter</id><content type="html" xml:base="arxgy.github.io/blog/2023/Letter/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[祝，前程似锦]]></summary></entry><entry><title type="html">现实液体</title><link href="arxgy.github.io/blog/2023/Realistic-Liquid/" rel="alternate" type="text/html" title="现实液体" /><published>2023-01-02T00:00:00+00:00</published><updated>2023-01-02T00:00:00+00:00</updated><id>arxgy.github.io/blog/2023/Realistic-Liquid</id><content type="html" xml:base="arxgy.github.io/blog/2023/Realistic-Liquid/"><![CDATA[<style>
/* p { */
  line-height: 1.2;
/* } */
</style>

<p>我不是蘑菇<br />
拒绝孕育碰运气的孢子<br />
不是谁最爱的榉木<br />
过多的声音搅断我的年轮<br />
择机汹涌，是我<br />
选择一个雨季来篡夺湖泊<br />
气蒸云梦，插标卖首<br /></p>

<p>我早该知道<br />
城外的人怎会后悔<br />
城池之内怎有河流<br />
你问这一身沉默还要编织多久<br />
赤色的坚冰，所有人的哀愁<br />
水的命运，沙的时代<br />
支流从来靠无中生有<br />
或许就现在吗<br />
衔入巫山楚王长梦<br />
吐纳昌谷春日霞蔚<br />
当我再次融入这片滩涂<br />
请允许我与你一起流淌<br />
未曾谋面的处女地<br />
就留给那些魔鬼去纵饮<br /></p>

<!-- 
This post shows how to add custom styles for blockquotes. Based on [jekyll-gitbook](https://github.com/sighingnow/jekyll-gitbook) implementation.

We decided to support the same custom blockquotes as in [jekyll-gitbook](https://sighingnow.github.io/jekyll-gitbook/jekyll/2022-06-30-tips_warnings_dangers.html), which are also found in a lot of other sites' styles. The styles definitions can be found on the [_base.scss](https://github.com/alshedivat/al-folio/blob/master/_sass/_base.scss) file, more specifically:

```scss
/* Tips, warnings, and dangers */
.post .post-content blockquote {
    &.block-tip {
    border-color: var(--global-tip-block);
    background-color: var(--global-tip-block-bg);

    p {
      color: var(--global-tip-block-text);
    }

    h1, h2, h3, h4, h5, h6 {
      color: var(--global-tip-block-title);
    }
  }

  &.block-warning {
    border-color: var(--global-warning-block);
    background-color: var(--global-warning-block-bg);

    p {
      color: var(--global-warning-block-text);
    }

    h1, h2, h3, h4, h5, h6 {
      color: var(--global-warning-block-title);
    }
  }

  &.block-danger {
    border-color: var(--global-danger-block);
    background-color: var(--global-danger-block-bg);

    p {
      color: var(--global-danger-block-text);
    }

    h1, h2, h3, h4, h5, h6 {
      color: var(--global-danger-block-title);
    }
  }
}
```

A regular blockquote can be used as following:

```markdown
> This is a regular blockquote
> and it can be used as usual
```

> This is a regular blockquote
> and it can be used as usual

These custom styles can be used by adding the specific class to the blockquote, as follows:

```markdown
> ##### TIP
>
> A tip can be used when you want to give advice
> related to a certain content.
{: .block-tip }
```

> ##### TIP
>
> A tip can be used when you want to give advice
> related to a certain content.
{: .block-tip }

```markdown
> ##### WARNING
>
> This is a warning, and thus should
> be used when you want to warn the user
{: .block-warning }
```

> ##### WARNING
>
> This is a warning, and thus should
> be used when you want to warn the user
{: .block-warning }

```markdown
> ##### DANGER
>
> This is a danger zone, and thus should
> be used carefully
{: .block-danger }
```

> ##### DANGER
>
> This is a danger zone, and thus should
> be used carefully
{: .block-danger } -->]]></content><author><name></name></author><category term="Poems" /><summary type="html"><![CDATA[献给J的21岁]]></summary></entry><entry><title type="html">Isaiah-Elegy</title><link href="arxgy.github.io/blog/2022/Compiler/" rel="alternate" type="text/html" title="Isaiah-Elegy" /><published>2022-12-13T00:00:00+00:00</published><updated>2022-12-13T00:00:00+00:00</updated><id>arxgy.github.io/blog/2022/Compiler</id><content type="html" xml:base="arxgy.github.io/blog/2022/Compiler/"><![CDATA[<h4 id="overview">Overview</h4>

<p><em>Isaiah, means “Yahweh is salvation”.</em><br />
A toy compiler supports compiling programs written in <code class="language-plaintext highlighter-rouge">Mx*</code>, a C-and-Java-like program language, into <code class="language-plaintext highlighter-rouge">rv32im</code> assembly.</p>

<h4 id="feature">Feature</h4>

<ul>
  <li>Use <code class="language-plaintext highlighter-rouge">ANTLR4</code> to analyze source code</li>
  <li>Support extensible semantic checking.</li>
  <li>Adopt LLVM-like IR, lean but efficient.</li>
  <li>Adopt Memory2Reg, a small optimization</li>
  <li>Advanced Instruction selector</li>
</ul>

<h4 id="evaluation">Evaluation</h4>
<p>It costs me totally 2 months to build this compiler, and 
the <a href="https://github.com/arxgy/Isaiah-Elegy">source code</a> is about <code class="language-plaintext highlighter-rouge">7k+ LoC</code>, which is really bulky for a second-year undergraduate.</p>

<h4 id="source-code">Source Code</h4>
<p><a href="https://github.com/arxgy/Isaiah-Elegy">Here</a>.</p>

<!-- ````markdown
```c++
code code code
```
````

```c++
int main(int argc, char const \*argv[])
{
    string myString;

    cout << "input a string: ";
    getline(cin, myString);
    int length = myString.length();

    char charArray = new char * [length];

    charArray = myString;
    for(int i = 0; i < length; ++i){
        cout << charArray[i] << " ";
    }

    return 0;
}
```

By default, it does not display line numbers. If you want to display line numbers for every code block, you can set `kramdown.syntax_highlighter_opts.block.line_numbers` to true in your `_config.yml` file.

If you want to display line numbers for a specific code block, all you have to do is wrap your code in a liquid tag:


{% highlight c++ linenos %}  <br/> code code code <br/> {% endhighlight %}


The keyword `linenos` triggers display of line numbers.
Produces something like this:


<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>
 -->]]></content><author><name></name></author><category term="Programming" /><summary type="html"><![CDATA[A compiler made from scratch.]]></summary></entry><entry><title type="html">YPU</title><link href="arxgy.github.io/blog/2022/CPU/" rel="alternate" type="text/html" title="YPU" /><published>2022-12-04T00:00:00+00:00</published><updated>2022-12-04T00:00:00+00:00</updated><id>arxgy.github.io/blog/2022/CPU</id><content type="html" xml:base="arxgy.github.io/blog/2022/CPU/"><![CDATA[<h4 id="overview">Overview</h4>

<p>A toy CPU based on tomasulo algorithm, supporting part of <code class="language-plaintext highlighter-rouge">rv32i</code> ISA.</p>

<h4 id="technical-features">Technical Features</h4>

<ul>
  <li>Tomasulo architecture with Reorder Buffer.</li>
  <li>Hardware Speculation and precise interruption, supported by 2-bit saturating counter predictor of 1024 entries.</li>
  <li>Directly-mapped instruction cache of 2048 entries.</li>
  <li>Reorder buffer of 16 entries.</li>
  <li>Well performance with relatively less hardware overhead.</li>
  <li>Pass all testcases on simulation and FPGA.</li>
  <li>Due to positive delay on 100MHz, YPU is quite possible to support higher frequencies. <strong>(not test yet)</strong></li>
</ul>

<p><br /></p>

<h4 id="evaluation">Evaluation</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Testcases</th>
      <th>tak</th>
      <th>magic</th>
      <th>superloop</th>
      <th>basicopt</th>
      <th>bulgarian</th>
      <th>queens</th>
      <th>Pi</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><strong>Time(FPGA)/s</strong></td>
      <td>0.074187</td>
      <td>0.043482</td>
      <td>0.033457</td>
      <td>0.028221</td>
      <td>1.228735</td>
      <td>1.200035</td>
      <td>&gt;3</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<p>This project costs me about one month to learn <code class="language-plaintext highlighter-rouge">Verilog HDL</code> from scratch and build a FPGA-compatible CPU program from nothing with a workload about <code class="language-plaintext highlighter-rouge">2k+ LoC</code>.</p>
<h4 id="acknowledgement">Acknowledgement</h4>

<p>Thanks Sirius, Pioooooo, XOR-op, happypig for answering questions and giving suggestions.<br />
Thanks Lhtie for playing Overwatch with me, which helped me a lot on releasing pressures.<br />
And at last, thanks myself for no reasons.<br /></p>

<h4 id="source-code">Source Code</h4>
<p><a href="https://github.com/arxgy/YPU">Here</a>.</p>]]></content><author><name></name></author><category term="Programming" /><summary type="html"><![CDATA[A CPU made from scratch.]]></summary></entry><entry><title type="html">铅水</title><link href="arxgy.github.io/blog/2022/Overwhelming-Water/" rel="alternate" type="text/html" title="铅水" /><published>2022-09-20T00:00:00+00:00</published><updated>2022-09-20T00:00:00+00:00</updated><id>arxgy.github.io/blog/2022/Overwhelming-Water</id><content type="html" xml:base="arxgy.github.io/blog/2022/Overwhelming-Water/"><![CDATA[<p>摩托车手的无袖T恤向后翻折<br />
我想起这风来自渤海<br />
不间断踏过沙与沫的少女<br />
白昼从她们身上随意剥离<br />
融成夏天谢幕的节日<br /></p>

<p>阳光延续触不可及的秋梦<br />
也只明朗了窗外的云河<br />
这些不被天空眷恋的人们<br />
总被藏入时间疲惫的皱褶<br />
无奈双颊染入铅的颜色<br />
生活逐渐归属墙垛<br />
我在敲门声中惊醒<br />
你的嘴唇红上泛红<br /></p>]]></content><author><name></name></author><category term="Poems" /><summary type="html"><![CDATA[东关酸风射眸子]]></summary></entry><entry><title type="html">此间丰饶</title><link href="arxgy.github.io/blog/2022/Feast/" rel="alternate" type="text/html" title="此间丰饶" /><published>2022-03-08T00:00:00+00:00</published><updated>2022-03-08T00:00:00+00:00</updated><id>arxgy.github.io/blog/2022/Feast</id><content type="html" xml:base="arxgy.github.io/blog/2022/Feast/"><![CDATA[<p>是你吗<br />
目光在远方凝为回音<br />
却又刻意绕开繁复的花朵<br /></p>

<p>谁曾籍此袭越关山<br />
籍此告别十七岁<br />
柳边水、流泻云<br />
薄荷质感的四月阶梯<br /></p>

<p>谁说此间丰饶<br />
山作心缭乱<br />
叶是风婆娑<br />
窗外朴树整齐温柔<br />
延伫刹那<br />
似曾与你共渡诸多此番春<br /></p>]]></content><author><name></name></author><category term="Poems" /><summary type="html"><![CDATA[是你吗 目光在远方凝为回音 却又刻意绕开繁复的花朵]]></summary></entry></feed>